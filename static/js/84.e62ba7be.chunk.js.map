{"version":3,"file":"static/js/84.e62ba7be.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","hooks/useFetchMovieById.js","Pages/NotFoundPage/NotFoundPage.styled.js","Pages/NotFoundPage/NotFoundPage.jsx","services/api.js","utils/status.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BaseInformation = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  max-height: 500px;\n`;\n\nexport const Description = styled.div`\n  width: 100%;\n`;\n\nexport const ButtonBack = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 20px;\n\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n\n  svg {\n    margin-right: 7px;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\nimport { Spinner } from 'components/Spinner';\nimport NotFoundPage from 'Pages/NotFoundPage';\nimport { STATUS } from 'utils/status';\nimport { useFetchMovieById } from 'hooks/useFetchMovieById';\nimport {\n  BaseInformation,\n  ButtonBack,\n  Description,\n  Image,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const prevLocation = location?.state?.from ?? '/';\n\n  const { movie, status } = useFetchMovieById(movieId);\n\n  const { title, poster_path, overview, genres, release_date, vote_average } =\n    movie;\n\n  return (\n    <>\n      <ButtonBack to={prevLocation}>\n        <BsFillArrowLeftCircleFill size={24} />\n        Go back\n      </ButtonBack>\n\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <NotFoundPage />}\n\n      {status === STATUS.RESOLVED && (\n        <div>\n          <BaseInformation>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={`${title}'s poster`}\n            ></Image>\n            <Description>\n              <h1>\n                {title} ({release_date.slice(0, 4)})\n              </h1>\n              <p>User Score: {vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>{genres.map(({ name }) => name).join(', ')}</p>\n            </Description>\n          </BaseInformation>\n\n          <hr />\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: prevLocation }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: prevLocation }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n\n          <hr />\n          <Suspense fallback={<Spinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useEffect, useState } from 'react';\nimport { getMovieById } from 'services/api';\nimport { STATUS } from 'utils/status';\n\nexport const useFetchMovieById = id => {\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setStatus(STATUS.PENDING);\n      try {\n        const movie = await getMovieById(id);\n        setMovie(movie);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n\n    fetchMovies();\n  }, [id]);\n\n  return { movie, status, error };\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  height: 100%;\n`;\n\nexport const ErrorTitle = styled.h1`\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const GoToHomepage = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n\n  color: '#4e54c8';\n  font-weight: 700;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import {\n  ErrorContainer,\n  ErrorTitle,\n  GoToHomepage,\n} from './NotFoundPage.styled';\n\nconst NotFoundPage = () => {\n  return (\n    <ErrorContainer>\n      <ErrorTitle>Sorry. Page not found</ErrorTitle>\n      <GoToHomepage to=\"/\">Go to homepage</GoToHomepage>\n    </ErrorContainer>\n  );\n};\n\nexport default NotFoundPage;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["BaseInformation","styled","div","_templateObject","_taggedTemplateLiteral","Image","img","_templateObject2","Description","_templateObject3","ButtonBack","Link","_templateObject4","MovieDetails","_location$state$from","_location$state","movieId","useParams","location","useLocation","prevLocation","state","from","movie","status","id","setMovie","useState","setStatus","STATUS","IDLE","error","setError","useEffect","async","PENDING","getMovieById","RESOLVED","REJECTED","fetchMovies","useFetchMovieById","title","poster_path","overview","genres","release_date","vote_average","_jsxs","_Fragment","children","to","_jsx","BsFillArrowLeftCircleFill","size","Spinner","NotFoundPage","src","concat","alt","slice","map","_ref","name","join","Suspense","fallback","Outlet","ErrorContainer","ErrorTitle","h1","GoToHomepage","API_KEY","axios","baseURL","getTrendingMovies","data","results","getReviewsById","getCastById","cast","searchMovies","query"],"sourceRoot":""}