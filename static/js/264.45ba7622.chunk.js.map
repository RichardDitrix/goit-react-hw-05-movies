{"version":3,"file":"static/js/264.45ba7622.chunk.js","mappings":"kOAKA,MA4BA,EA5BgBA,KACd,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACd,QAAEC,EAAO,OAAEC,EAAM,MAAEC,GCHQC,KACjC,MAAOH,EAASI,IAAcC,EAAAA,EAAAA,UAAS,KAChCJ,EAAQK,IAAaD,EAAAA,EAAAA,UAASE,EAAAA,EAAOC,OACrCN,EAAOO,IAAYJ,EAAAA,EAAAA,UAAS,MAiBnC,OAfAK,EAAAA,EAAAA,YAAU,MACRC,iBACEL,EAAUC,EAAAA,EAAOK,SACjB,IACE,MAAMZ,QAAgBa,EAAAA,EAAAA,IAAeV,GACrCC,EAAWJ,GACXM,EAAUC,EAAAA,EAAOO,SACnB,CAAE,MAAOZ,GACPO,EAASP,GACTI,EAAUC,EAAAA,EAAOQ,SACnB,CACF,CACAC,EAAc,GACb,CAACb,IAEG,CAAEH,UAASC,SAAQC,QAAO,EDjBEe,CAAoBnB,GAEvD,OAAIG,IAAWM,EAAAA,EAAOK,SACbM,EAAAA,EAAAA,KAACC,EAAAA,EAAO,IAGblB,IAAWM,EAAAA,EAAOQ,UACbK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,UAAQnB,EAAMoB,WAGxBrB,IAAWM,EAAAA,EAAOO,UAA+B,IAAnBd,EAAQuB,QACjCL,EAAAA,EAAAA,KAAA,OAAAG,SAAK,+CAIZH,EAAAA,EAAAA,KAAA,MAAAG,SACGrB,EAAQwB,KAAIC,IAAA,IAAC,OAAEC,EAAM,QAAEC,EAAO,GAAExB,GAAIsB,EAAA,OACnCL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASK,MACbR,EAAAA,EAAAA,KAAA,KAAAG,SAAIM,MAFGxB,EAGJ,KAEJ,C,6FE3BT,MAAMyB,EAAU,mCAEhBC,IAAAA,SAAeC,QAAU,+BAElB,MAAMC,EAAoBpB,gBACjBkB,IAAAA,IAAU,6BAADG,OAA8BJ,KAAYK,KAAKC,QAG3DC,EAAexB,gBACZkB,IAAAA,IAAU,UAADG,OAAW7B,EAAE,aAAA6B,OAAYJ,KAAYK,KAGjDpB,EAAiBF,gBACdkB,IAAAA,IAAU,UAADG,OAAW7B,EAAE,qBAAA6B,OAAoBJ,KAAYK,KACjEC,QAGQE,EAAczB,gBACXkB,IAAAA,IAAU,UAADG,OAAW7B,EAAE,qBAAA6B,OAAoBJ,KAAYK,KAAKI,KAG9DC,EAAe3B,gBACZkB,IAAAA,IAAU,uBAADG,OAAwBO,EAAK,aAAAP,OAAYJ,KAC7DK,KAAKC,O,kCCzBH,MAAM3B,EAAS,CACpBC,KAAM,OACNI,QAAS,UACTE,SAAU,WACVC,SAAU,W","sources":["components/Reviews/Reviews.jsx","hooks/useFetchReviewsById.js","services/api.js","utils/status.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { Spinner } from 'components/Spinner';\nimport { STATUS } from 'utils/status';\nimport { useFetchReviewsById } from 'hooks/useFetchReviewsById';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews, status, error } = useFetchReviewsById(movieId);\n\n  if (status === STATUS.PENDING) {\n    return <Spinner />;\n  }\n\n  if (status === STATUS.REJECTED) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  if (status === STATUS.RESOLVED && reviews.length === 0) {\n    return <div>We don't have any reviews for this movie.</div>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { useEffect, useState } from 'react';\nimport { getReviewsById } from '../services/api';\nimport { STATUS } from '../utils/status';\n\nexport const useFetchReviewsById = id => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      setStatus(STATUS.PENDING);\n      try {\n        const reviews = await getReviewsById(id);\n        setReviews(reviews);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  return { reviews, status, error };\n};\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Reviews","movieId","useParams","reviews","status","error","id","setReviews","useState","setStatus","STATUS","IDLE","setError","useEffect","async","PENDING","getReviewsById","RESOLVED","REJECTED","fetchReviews","useFetchReviewsById","_jsx","Spinner","_jsxs","children","message","length","map","_ref","author","content","API_KEY","axios","baseURL","getTrendingMovies","concat","data","results","getMovieById","getCastById","cast","searchMovies","query"],"sourceRoot":""}