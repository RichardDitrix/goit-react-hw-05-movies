{"version":3,"file":"static/js/956.4d870940.chunk.js","mappings":"yOAGO,MAAMA,EAAQC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAMjBC,EAAOJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iKAShBI,EAASP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yFAOnBO,EAAaV,EAAAA,GAAOW,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iEAMtBU,GAAYb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sG,cC1B9B,MAAMa,EACL,OADKA,EAEF,UAFEA,EAGD,WAHCA,EAID,WAuDZ,EA5BaC,KACX,MAAM,OAAEC,EAAM,OAAEC,EAAM,MAAEC,GAzBHC,MACrB,MAAOH,EAAQI,IAAaC,EAAAA,EAAAA,UAAS,KAC9BJ,EAAQK,IAAaD,EAAAA,EAAAA,UAASP,IAC9BI,EAAOK,IAAYF,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAG,EAAAA,EAAAA,YAAU,MACRC,iBACEH,EAAUR,GACV,IACE,MAAME,QAAeU,EAAAA,EAAAA,MACrBN,EAAUJ,GACVM,EAAUR,EACZ,CAAE,MAAOI,GACPK,EAASL,GACTI,EAAUR,EACZ,CACF,CAEAa,EAAa,GACZ,IAEI,CAAEX,SAAQC,SAAQC,QAAO,EAIEC,GAClC,OACES,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAClC,EAAK,CAAAiC,SAAC,mBACNb,IAAWH,IAAkBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,IAErCf,IAAWH,IAAmBc,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,UAAQZ,EAAMe,WAEhDhB,IAAWH,IACViB,EAAAA,EAAAA,KAAC7B,EAAI,CAAA4B,SACFd,EAAOkB,KAAIC,IAAA,IAAC,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,GAAEC,GAAIJ,EAAA,OAC3CJ,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACjB,EAAS,CAAC6B,GAAE,WAAAC,OAAaF,GAAKT,SAAA,EAC7BC,EAAAA,EAAAA,KAAC1B,EAAM,CACLqC,IAAG,mCAAAD,OAAqCJ,GACxCM,IAAG,GAAAF,OAAKL,EAAK,gBAEfL,EAAAA,EAAAA,KAACvB,EAAU,CAAAsB,SAAO,OAALM,QAAK,IAALA,EAAAA,EAASE,QANjBC,EAQJ,QAIV,C,6FC1DP,MAAMK,EAAU,mCAEhBC,IAAAA,SAAeC,QAAU,+BAElB,MAAMpB,EAAoBD,gBACjBoB,IAAAA,IAAU,6BAADJ,OAA8BG,KAAYG,KAAKC,QAG3DC,EAAexB,gBACZoB,IAAAA,IAAU,UAADJ,OAAWF,EAAE,aAAAE,OAAYG,KAAYG,KAGjDG,EAAiBzB,gBACdoB,IAAAA,IAAU,UAADJ,OAAWF,EAAE,qBAAAE,OAAoBG,KAAYG,KACjEC,QAGQG,EAAc1B,gBACXoB,IAAAA,IAAU,UAADJ,OAAWF,EAAE,qBAAAE,OAAoBG,KAAYG,KAAKK,KAG9DC,EAAe5B,gBACZoB,IAAAA,IAAU,uBAADJ,OAAwBa,EAAK,aAAAb,OAAYG,KAC7DG,KAAKC,O","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0;\n  margin-bottom: 30px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 340px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 0;\n  margin-top: 12px;\n  font-size: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { Spinner } from 'components/Spinner';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { List, MovieLink, Poster, MovieTitle, Title } from './Home.styled';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst useFetchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setStatus(STATUS.PENDING);\n      try {\n        const movies = await getTrendingMovies();\n        setMovies(movies);\n        setStatus(STATUS.RESOLVED);\n      } catch (error) {\n        setError(error);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n\n    fetchMovies();\n  }, []);\n\n  return { movies, status, error };\n};\n\nconst Home = () => {\n  const { movies, status, error } = useFetchMovies();\n  return (\n    <>\n      <Title>Trending today</Title>\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <h1>Error: {error.message}</h1>}\n\n      {status === STATUS.RESOLVED && (\n        <List>\n          {movies.map(({ title, poster_path, name, id }) => (\n            <li key={id}>\n              <MovieLink to={`/movies/${id}`}>\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={`${title}'s poster`}\n                ></Poster>\n                <MovieTitle>{title ?? name}</MovieTitle>\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n"],"names":["Title","styled","h1","_templateObject","_taggedTemplateLiteral","List","ul","_templateObject2","Poster","img","_templateObject3","MovieTitle","h3","_templateObject4","MovieLink","Link","_templateObject5","STATUS","Home","movies","status","error","useFetchMovies","setMovies","useState","setStatus","setError","useEffect","async","getTrendingMovies","fetchMovies","_jsxs","_Fragment","children","_jsx","Spinner","message","map","_ref","title","poster_path","name","id","to","concat","src","alt","API_KEY","axios","baseURL","data","results","getMovieById","getReviewsById","getCastById","cast","searchMovies","query"],"sourceRoot":""}