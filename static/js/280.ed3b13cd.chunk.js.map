{"version":3,"file":"static/js/280.ed3b13cd.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","hooks/useSearchMovies.js","components/MoviesList/MoviesList.styles.js","components/MoviesList/MoviesList.jsx","services/api.js","utils/status.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  box-sizing: border-box;\n  height: 32px;\n  padding: 5px 10px;\n  width: 20%;\n\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { FaSearch } from 'react-icons/fa';\nimport { FormStyled, SearchButton, SearchInput } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  return (\n    <FormStyled onSubmit={onSubmit}>\n      <SearchInput type=\"text\" name=\"search\" />\n      <SearchButton type=\"submit\">\n        <FaSearch size={20} />\n      </SearchButton>\n    </FormStyled>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  padding: 40px 0;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport Form from 'components/Form/Form';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { STATUS } from 'utils/status';\nimport { useSearchMovies } from 'hooks/useSearchMovies';\n\nimport { ListWrapper } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const { movies, status, error } = useSearchMovies(query);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.elements.search.value.trim();\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit} />\n\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <h1>Error: {error.message}</h1>}\n\n      {status === STATUS.RESOLVED && (\n        <ListWrapper>\n          <MoviesList movies={movies} />\n        </ListWrapper>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { searchMovies } from '../services/api';\nimport { STATUS } from '../utils/status';\n\nexport const useSearchMovies = query => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query) {\n        setStatus(STATUS.PENDING);\n        try {\n          const movies = await searchMovies(query);\n          setMovies(movies);\n          setStatus(STATUS.RESOLVED);\n        } catch (error) {\n          setError(error);\n          setStatus(STATUS.REJECTED);\n        }\n      }\n    }\n\n    fetchMovies();\n  }, [query]);\n\n  return { movies, status, error };\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const NoMovies = styled.h2`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 340px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 0;\n  margin-top: 12px;\n  font-size: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import {\n  MovieLink,\n  MovieTitle,\n  Poster,\n  List,\n  NoMovies,\n} from './MoviesList.styles';\n\nconst MoviesList = ({ movies = [] }) => {\n  if (movies.length === 0) return <NoMovies>No movies found</NoMovies>;\n\n  return (\n    <List>\n      {movies.map(({ title, poster_path, name, id }) => (\n        <li key={id}>\n          <MovieLink to={`/movies/${id}`}>\n            <Poster\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={`${title}'s poster`}\n            />\n            <MovieTitle>{title ?? name}</MovieTitle>\n          </MovieLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["FormStyled","styled","form","_templateObject","_taggedTemplateLiteral","SearchInput","input","_templateObject2","SearchButton","button","_templateObject3","_ref","onSubmit","_jsxs","children","_jsx","type","name","FaSearch","size","ListWrapper","ul","Movies","searchParams","setSearchParams","useSearchParams","query","get","movies","status","error","setMovies","useState","setStatus","STATUS","IDLE","setError","useEffect","async","PENDING","searchMovies","RESOLVED","REJECTED","fetchMovies","useSearchMovies","_Fragment","Form","event","preventDefault","target","elements","search","value","trim","Spinner","message","MoviesList","NoMovies","h2","List","Poster","img","MovieTitle","h3","_templateObject4","MovieLink","Link","_templateObject5","length","map","_ref2","title","poster_path","id","to","concat","src","alt","API_KEY","axios","baseURL","getTrendingMovies","data","results","getMovieById","getReviewsById","getCastById","cast"],"sourceRoot":""}