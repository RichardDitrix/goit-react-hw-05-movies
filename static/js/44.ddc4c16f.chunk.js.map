{"version":3,"file":"static/js/44.ddc4c16f.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SearchInput = styled.input`\n  box-sizing: border-box;\n  height: 32px;\n  padding: 5px 10px;\n  width: 20%;\n\n  font-size: 16px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-top: 30px;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 30px 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 340px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.h3`\n  margin: 0;\n  margin-top: 12px;\n  font-size: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/api';\nimport { FaSearch } from 'react-icons/fa';\nimport {\n  Form,\n  List,\n  MovieLink,\n  MovieTitle,\n  Poster,\n  SearchButton,\n  SearchInput,\n} from './Movies.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst useSearchMovies = query => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query) {\n        setStatus(STATUS.PENDING);\n        try {\n          const movies = await searchMovies(query);\n          setMovies(movies);\n          setStatus(STATUS.RESOLVED);\n        } catch (error) {\n          setError(error);\n          setStatus(STATUS.REJECTED);\n        }\n      }\n    }\n    fetchMovies();\n  }, [query]);\n\n  return { movies, status, error };\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const { movies, status, error } = useSearchMovies(query);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.elements.search.value.trim();\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <SearchInput type=\"text\" name=\"search\" />\n        <SearchButton type=\"submit\">\n          <FaSearch size={20} />\n        </SearchButton>\n      </Form>\n\n      {status === STATUS.PENDING && <Spinner />}\n\n      {status === STATUS.REJECTED && <h1>Error: {error.message}</h1>}\n\n      {status === STATUS.RESOLVED && (\n        <List>\n          {movies.map(({ title, name, poster_path, id }) => (\n            <li key={id}>\n              <MovieLink\n                to={`/movies/${id}`}\n                state={{ from: `/movies?query=${query}` }}\n              >\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={`${title}'s poster`}\n                ></Poster>\n                <MovieTitle>{title ?? name}</MovieTitle>\n              </MovieLink>\n            </li>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '80dd5d087ca76f72d259ad6d0e54d71f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  return (await axios.get(`/trending/all/day?api_key=${API_KEY}`)).data.results;\n};\n\nexport const getMovieById = async id => {\n  return (await axios.get(`/movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const getReviewsById = async id => {\n  return (await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`)).data\n    .results;\n};\n\nexport const getCastById = async id => {\n  return (await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`)).data.cast;\n};\n\nexport const searchMovies = async query => {\n  return (await axios.get(`/search/movie?query=${query}&api_key=${API_KEY}`))\n    .data.results;\n};\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","SearchInput","input","_templateObject2","SearchButton","button","_templateObject3","List","ul","_templateObject4","Poster","img","_templateObject5","MovieTitle","h3","_templateObject6","MovieLink","Link","_templateObject7","STATUS","Movies","searchParams","setSearchParams","useSearchParams","query","get","movies","status","error","setMovies","useState","setStatus","setError","useEffect","async","searchMovies","fetchMovies","useSearchMovies","_jsxs","_Fragment","children","onSubmit","event","preventDefault","target","elements","search","value","trim","_jsx","type","name","FaSearch","size","Spinner","message","map","_ref","title","poster_path","id","to","concat","state","from","src","alt","API_KEY","axios","baseURL","getTrendingMovies","data","results","getMovieById","getReviewsById","getCastById","cast"],"sourceRoot":""}